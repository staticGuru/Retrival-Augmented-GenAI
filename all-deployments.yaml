# Redis
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: redis:latest
          volumeMounts:
            - name: redis-data
              mountPath: /data
      volumes:
        - name: redis-data
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: redis
spec:
  selector:
    app: redis
  ports:
    - port: 6379
      targetPort: 6379
---
# Postgres
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: mypostgres:latest
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              value: "admin"
            - name: POSTGRES_PASSWORD
              value: "admin"
            - name: POSTGRES_DB
              value: "microvectordb"
          volumeMounts:
            - name: init-sql
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: init-sql
          hostPath:
            path: /path/on/host/postgres/init.sql
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  selector:
    app: postgres
  ports:
    - port: 5433
      targetPort: 5432
---
# Service2
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend_service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend_service
  template:
    metadata:
      labels:
        app: backend_service
    spec:
      containers:
        - name: backend_service
          image: mybackend_service:latest
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: backend_service
spec:
  selector:
    app: backend_service
  ports:
    - port: 5000
      targetPort: 80
---
# Service3
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai_service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ai_service
  template:
    metadata:
      labels:
        app: ai_service
    spec:
      containers:
        - name: ai_service
          image: myai_service:latest
          ports:
            - containerPort: 80
          envFrom:
            - configMapRef:
                name: ai_service-configmap
---
apiVersion: v1
kind: Service
metadata:
  name: ai_service
spec:
  selector:
    app: ai_service
  ports:
    - port: 8000
      targetPort: 80
---
# Frontend
apiVersion: apps/v1
kind: Deployment
metadata:
  name: client
spec:
  replicas: 1
  selector:
    matchLabels:
      app: client
  template:
    metadata:
      labels:
        app: client
    spec:
      containers:
        - name: client
          image: myclient:latest
          ports:
            - containerPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: client
spec:
  selector:
    app: client
  ports:
    - port: 3000
      targetPort: 3000
